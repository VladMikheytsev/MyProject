import json
import os
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from typing import Dict, Any

app = FastAPI()

# üîí –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è CORS
origins = [
    "http://localhost:3000",                                 # –ª–æ–∫–∞–ª—å–Ω—ã–π React
    "https://my-project-navy-theta.vercel.app",              # Vercel-–¥–µ–ø–ª–æ–π
    "https://72309dfdf5fb.ngrok-free.app",                   # ngrok-–ø—Ä–æ–∫—Å–∏
]

# ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,        # ‚ö†Ô∏è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ HTTPS-URL –æ—Ç–¥–µ–ª—å–Ω–æ
    allow_credentials=True,
    allow_methods=["*"],          # ‚Üê —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ –º–µ—Ç–æ–¥—ã: GET, POST, OPTIONS –∏ —Ç.–¥.
    allow_headers=["*"],          # ‚Üê —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–≤ —Ç.—á. Content-Type)
)

# üìÅ –ü—É—Ç—å –¥–æ JSON-—Ñ–∞–π–ª–∞
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
DB_FILE = os.path.join(BASE_DIR, "warehouse_db.json")

# üì¶ –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
DEFAULT_DATA = {
    "warehouses": [],
    "items": [],
    "itemTypes": [
        {"id": 1, "name": "–ì–µ–ª—å", "color": "#3b82f6"},
        {"id": 2, "name": "–†–∞—Å—Ö–æ–¥–Ω–∏–∫–∏", "color": "#16a34a"},
        {"id": 3, "name": "–ö–æ—Ä–æ–±–∫–∏", "color": "#f97316"}
    ]
}

# üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞
def load_db():
    try:
        with open(DB_FILE, "r", encoding="utf-8") as f:
            print("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ warehouse_db.json")
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        print("‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥—ë–Ω, –≤–æ–∑–≤—Ä–∞—â–∞—é –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        return DEFAULT_DATA

# üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
def save_db(data: Dict):
    with open(DB_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=4)
    print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {len(data.get('warehouses', []))} —Å–∫–ª–∞–¥–æ–≤, "
          f"{len(data.get('items', []))} —Ç–æ–≤–∞—Ä–æ–≤")

# üöÄ –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ ‚Äî —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
@app.on_event("startup")
def initialize_db():
    if not os.path.exists(DB_FILE):
        print("üìÇ warehouse_db.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é —Ñ–∞–π–ª.")
        save_db(DEFAULT_DATA)

# üì§ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
@app.get("/api/data")
async def get_all_data():
    return load_db()

# üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
@app.post("/api/data")
async def update_all_data(data: Dict[str, Any]):
    if data == DEFAULT_DATA:
        print("‚õîÔ∏è –ü–æ–ª—É—á–µ–Ω—ã –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äî –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é.")
        return {"status": "skipped"}
    save_db(data)
    return {"status": "success"}
